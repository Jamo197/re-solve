# Generated by Django 3.2.9 on 2022-01-11 12:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('material_class', models.CharField(choices=[('Plastik', 'Plastic'), ('Holz', 'Wood'), ('Metall', 'Metal'), ('Textil', 'Textile')], max_length=20)),
                ('ecological_index', models.FloatField(default=-1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SustainabilityProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(choices=[('CO2 Verbrauch', 'Co2 Consumption'), ('Wasserverbrauch', 'Water Consumption'), ('Energieverbrauch', 'Energy Consumption'), ('Recyclingfähigkeit', 'Recyclabilty')], max_length=60)),
                ('value', models.FloatField(default=0)),
                ('unit', models.CharField(max_length=60)),
                ('eco_score', models.DecimalField(decimal_places=3, default=0, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sustainability_properties', to='materials.material')),
            ],
            options={
                'verbose_name_plural': 'sustainability_properties',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(choices=[('Hitzbeständigkeit', 'Heat Resistence'), ('Zugfestigkeit', 'Tensile Strength'), ('Bruchfestigkeit', 'Breaking Strength'), ('Dichte', 'Density'), ('Feuchtigkeitsresistenz', 'Moisture Resistence'), ('Oberflächenbeschaffenheit', 'Surface Texture')], max_length=25)),
                ('value', models.PositiveIntegerField(default=0)),
                ('unit', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='materials.material')),
            ],
            options={
                'verbose_name_plural': 'properties',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('price', models.PositiveIntegerField()),
                ('replaceability_index', models.PositiveIntegerField(default=0)),
                ('quantity_in_stock', models.PositiveIntegerField(default=0)),
                ('in_stock', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.material')),
            ],
        ),
    ]
